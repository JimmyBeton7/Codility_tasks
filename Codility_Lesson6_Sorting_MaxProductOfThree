#include <algorithm>
#include<vector>

int solution(vector<int> &A) 
{
    vector<int>triplets;

    for(int i = 0; i < A.size(); i++)
    {
        for(int j = i + 1; j < A.size(); j++)
        {
            for(int k = j + 1; k < A.size(); k++)
            {
                int result = A[i] * A[j] * A[k];
                triplets.push_back(result); 
            }
        }
    }

    sort(triplets.begin(), triplets.end());

    int biggest = triplets[triplets.size() - 1];
    return biggest;
}
//-----------------------------------------------------------------------

#include <algorithm>
#include<vector>

int solution(vector<int> &A) 
{
    int N = A.size();
    sort(A.begin(), A.end());

    int prod1 = A[N-1] * A[N-2] * A[N-3]; //najwieksze > 0
    int prod2 = A[0] * A[1] * A[N-1]; //dwie najdalej od zera * najwieksza

    return max(prod1, prod2);
}
